# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/d06c79f9-ed74-4fb4-827d-12d98a5bd3a4";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-9e52490c-bf33-4a88-8932-b3c989811dcf".device = "/dev/disk/by-uuid/9e52490c-bf33-4a88-8932-b3c989811dcf";

  fileSystems."/boot/efi" =
    {
      device = "/dev/disk/by-uuid/60B7-41BD";
      fsType = "vfat";
    };

  fileSystems."/data" =
    {
      device = "/dev/disk/by-label/DATA";

    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/36da3e43-ff12-47f1-93aa-3932f5480dfd"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp2s0f0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp3s0.useDHCP = lib.mkDefault true;

  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.opengl = {
    enable = true;
    driSupport = true;
    driSupport32Bit = true;
  };
  hardware.enableAllFirmware = true;
  hardware.enableRedistributableFirmware = true;

}
